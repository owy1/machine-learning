install.packages("plotly")
library(plotly)
Long Form 540NR
plot_ly(mtcars, x = ~wt, y = ~mpg, type = "scatter", color = ~factor(cyl))
y <- galton$child
library(UsingR); data(galton)
plot(galton$parent, galton$child, pch=19,col="blue")
library(UsingR); data(galton); library(reshape); long <- melt(galton)
g <- ggplot(long, aes(x = value, fill = variable))
g <- g + geom_histogram(colour = "black", binwidth=1)
g <- g + facet_grid(. ~ variable)
g
g <- ggplot(long, aes(x = value, fill = variable))
library(reshape)
library(reshape2)
long <- melt(galton)
g <- ggplot(long, aes(x = value, fill = variable))
g <- g + facet_grid(. ~ variable)
g <- g + geom_histogram(colour = "black", binwidth=1)
g
ggplot(galton, aes(x=parent, y=child)) + geom_point()
libray(dplyr)
library(dplyr)
freqData <- as.data.frame(table(galton$child, galton$parent))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x,y))
names(freqData) <- c("child", "parent", "freq")
myPlot <- function(beta){}
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x=parent, y=child))
g <- g+scale_size(range = c(2,20), guide = "none")
g <- g + geom_point(colour="grey50", aes(size = freq+10, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g+ggtitle("beta = ", beat, "mse = ", round(mse,3)))
g <- g+ggtitle(paste("beta = ", beta, "mse = ", round(mse,3)))
myPlot <- function(beta){
+ g <- ggplot(filter(freqData, freq > 0), aes(x=parent, y=child))
+ g <- g+scale_size(range = c(2,20), guide = "none")
+ g <- g + geom_point(colour="grey50", aes(size = freq+10, show_guide = FALSE))
+ g <- g + geom_point(aes(colour=freq, size = freq))
+ g <- g + scale_colour_gradient(low = "lightblue", high="white")
+ g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
+ mse <- mean( (y - beta * x) ^2 )
+ g <- g+ggtitle("beta = ", beat, "mse = ", round(mse,3))
)
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x=parent, y=child))
g <- g+scale_size(range = c(2,20), guide = "none")
g <- g + geom_point(colour="grey50", aes(size = freq+10, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g+ggtitle("beta = ", beat, "mse = ", round(mse,3))
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x=parent, y=child))
g <- g+scale_size(range = c(2,20), guide = "none")
g <- g + geom_point(colour="grey50", aes(size = freq+10, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g+ggtitle(paste("beta = ", beta, "mse = ", round(mse,3)))
g}
manipulate(myPlot(beta), beta = slider(0.6,1.2,step=0.02))
)
g
y <- galton$child - mean(galton$child)
x <- galton$parent - mean(galton$parent)
freqData <- as.data.frame(table(x, y))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
myPlot <- function(beta){
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
g <- g + geom_abline(intercept = 0, slope = beta, size = 3)
mse <- mean( (y - beta * x) ^2 )
g <- g + ggtitle(paste("beta = ", beta, "mse = ", round(mse, 3)))
g
}
myPlot
manipulate(myPlot(beta), beta=slider(0.6, 1.2, step = 0.02))
library(manipulate)
install.packages("manipulate")
library(manipulate)
manipulate(myPlot(beta), beta=slider(0.6, 1.2, step = 0.02))
lm(I(child - mean(child)) ~ I(paent - mean(parent)) - 1 , data = galton)
lm(I(child - mean(child)) ~ I(parent - mean(parent)) - 1 , data = galton)
freqData <- as.data.frame(table(galton$child, galton$parent))
names(freqData) <- c("child", "parent", "freq")
freqData$child <- as.numeric(as.character(freqData$child))
freqData$parent <- as.numeric(as.character(freqData$parent))
g <- ggplot(filter(freqData, freq > 0), aes(x = parent, y = child))
g <- g  + scale_size(range = c(2, 20), guide = "none" )
g <- g + geom_point(colour="grey50", aes(size = freq+20, show_guide = FALSE))
g <- g + geom_point(aes(colour=freq, size = freq))
g <- g + scale_colour_gradient(low = "lightblue", high="white")
lm1 <- lm(galton$child ~ galton$parent)
g <- g + geom_abline(intercept = coef(lm1)[1], slope = coef(lm1)[2], size = 3, colour = grey(.5)
)
g
clear
data <- data(galton)
dim(data)
data
dataset <- data(galton)
dim(dataset)
library(UsingR); data(galton)
y <- galton$child
x <- galton$parent
data <- as.data.frame(table(x,y))
data
View(data)
names(data) <- c("child", "parent", "freq")
data <- as.data.frame(table(y,x))
names(data) <- c("child", "parent")
plot(as.nuermic(as.vector(data$parent)), as.numeric(as.vector(data$child)), xlab = "parent height", ylab = "child height")
plot(as.numeric(as.vector(data$parent)), as.numeric(as.vector(data$child)), xlab = "parent height", ylab = "child height")
plot(as.numeric(as.vector(data$parent)), as.numeric(as.vector(data$child)), xlab = "parent height - inches", ylab = "child height - inches", col = "blue", xlim = c(62, 75), ylim = c(55, 80))
abline(mean(y) - mean(x) * cor(y, x) * sd(y) / sd(x), sd(y) / sd(x) * cor(y, x), lwd =3, col = "red")
plot(galton$parent,galton$child,pch=19,col="blue", xlab = "parent height - inches", ylab = "child height - inches", col = "blue", xlim = c(62, 75), ylim = c(55, 80))
plot(galton$parent,galton$child,pch=19, col="blue", xlab = "parent height - inches", ylab = "child height - inches", xlim = c(62, 75), ylim = c(55, 80))
abline(mean(y) - mean(x) * cor(y, x) * sd(y) / sd(x), sd(y) / sd(x) * cor(y, x), lwd =3, col = "red")
setwd("~/Desktop")
dataset <- read.csv("boston_housing_data")
dataset <- read.csv("boston_housing_data.csv")
View(dataset)
dataset <- read.csv("boston_housing_data.csv", header = None, sep = "")
dataset <- read.csv("boston_housing_data.csv", header = False, sep = " ")
dataset <- read.csv("boston_housing_data.csv", sep = "")
View(dataset)
nrows(dataset)
nrow(dataset)
ncol(dataset)
dataset <- dataset[, c("CRIM","ZN","INDUS","CHAS","NOX","RM","AGE","DIS","RAD","TAX","PTRATIO","B","LSTAT","MEDV")]
cnames <- c("CRIM","ZN","INDUS","CHAS","NOX","RM","AGE","DIS","RAD","TAX","PTRATIO","B","LSTAT","MEDV")
colnames(dataset) <- cnames
View(dataset)
dataset <- read.csv("boston_housing_data.csv", header=FALSE, sep = "")
dataset <- read.csv("/Users/owy1/codefellows/401/machine-learning/boston_housing_data.csv", header=FALSE, sep = "")
nrows(dataset)
nrow(dataset)
View(dataset)
colnames(dataset) <- cnames
View(dataset)
MeanMEDV = mean(dataset$MEDV)
MeanMEDV
MedianMEDV = median(dataset$MEDV)
MedianMEDV
minAGE = min(dataset$AGE)
minAGE
dataCHAS=dataset[dataset[dataset$CHAS==1]]
dataCHAS=dataset[dataset$CHAS==1,]
ViewdataCHAS
View(dataCHAS)
datanotCHAS=dataset[dataset$CHAS==0]
datanotCHAS=dataset[dataset$CHAS==0,]
nrow(datanotCHAS)
471+35
setwd("~/Desktop")
setwd("~/codefellows/401/machine-learning")
dataset <- read.csv("Building_Permits___Current.csv", sep = "")
dataset <- read.csv("Building_Permits___Current.csv", sep = "", header=TRUE)
dataset <- read.csv("Building_Permits___Current.csv", sep = "", header=FALSE)
View(dataset)
dataset <- read.csv("Building_Permits___Current.csv", sep = ",", header=FALSE)
nrow(dataset)
tail(dataset)
head(dataset)
dataset = dataset[1:,:]
dataset <- read.csv("Building_Permits___Current.csv", sep = ",", header=TRUE)
head(dataset)
length(rle(sort(dataset))$Permit.Type)
x <- dataset$Permit.Type
nrow(x)
x <- dataset[Permit.Type]
x <- dataset[1]
head(x)
x <- dataset[2]
head(x)
length(rle(sort(x))$values)
import base
length(unique(x))
as.character(unique(dataset[2]))
levels(dataset[2])
levels(x)
as.character(unique(x))
unique(x)
x <- [1,2,3,4,5,6,7,8,9]
x <- c(1,2,3,4,5)
x
max(x)
min(x)
avg(x)
mean(x)
x <- c(1,2,3,4,5,6,7,8,9)
sum(x)
count(x)
mean(x)
y <- dataset[5]
head(y)
unique(y)
